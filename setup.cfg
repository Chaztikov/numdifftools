# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = numdifftools
description = Solves automatic numerical differentiation problems in one or more variables.
author = Per A Brodtkorb
author-email = per.andreas.brodtkorb@gmail.com
license = new BSD
url = https://github.com/pbrod/numdifftools
long-description = README.rst
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Environment :: Console
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Operating System :: POSIX :: Linux
    Operating System :: Unix
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Topic :: Scientific/Engineering :: Mathematics
[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# Add here dependencies of your project (semicolon-separated), e.g.
install_requires = numpy; scipy; algopy; statsmodels

# Add here test requirements (semicolon-separated)
tests_require = pytest; pytest-cov; hypothesis; matplotlib; line_profiler 

[options.packages.find]
where = src
exclude =
     tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install git_numdifftools[PDF]` like:
# PDF = ReportLab; RXP

[test]
# py.test options when running `python setup.py test`
addopts = src/numdifftools
          src/numdifftools/tests

[tool:pytest]
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov numdifftools --cov-report term-missing
    --verbose
    --doctest_modules
    --pep8norecursedirs =
    dist
    build
    .tox

norecursedirs =
    .*
    _build
    docs
    tmp*

pep8ignore =
    tests/*.py ALL
    info.py ALL
[aliases]
docs = build_sphinx
release = sdist bdist_wheel upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

#[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
# version = 3.0
version = 2.5.11
#package = numdifftools
#extensions =
#    no_skeleton
